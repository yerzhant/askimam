// Mocks generated by Mockito 5.0.3 from annotations
// in askimam/test/chat/bloc/my_chats_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:askimam/chat/domain/chat.dart' as _i6;
import 'package:askimam/chat/domain/chat_repository.dart' as _i3;
import 'package:askimam/common/domain/rejection.dart' as _i5;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

class _FakeEither<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [ChatRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatRepository extends _i1.Mock implements _i3.ChatRepository {
  MockChatRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Rejection, List<_i6.Chat>>> getPublic(
          int? offset, int? pageSize) =>
      (super.noSuchMethod(Invocation.method(#getPublic, [offset, pageSize]),
              returnValue:
                  Future.value(_FakeEither<_i5.Rejection, List<_i6.Chat>>()))
          as _i4.Future<_i2.Either<_i5.Rejection, List<_i6.Chat>>>);
  @override
  _i4.Future<_i2.Either<_i5.Rejection, List<_i6.Chat>>> getMy(
          int? offset, int? pageSize) =>
      (super.noSuchMethod(Invocation.method(#getMy, [offset, pageSize]),
              returnValue:
                  Future.value(_FakeEither<_i5.Rejection, List<_i6.Chat>>()))
          as _i4.Future<_i2.Either<_i5.Rejection, List<_i6.Chat>>>);
  @override
  _i4.Future<_i2.Either<_i5.Rejection, List<_i6.Chat>>> getUnanswered(
          int? offset, int? pageSize) =>
      (super.noSuchMethod(Invocation.method(#getUnanswered, [offset, pageSize]),
              returnValue:
                  Future.value(_FakeEither<_i5.Rejection, List<_i6.Chat>>()))
          as _i4.Future<_i2.Either<_i5.Rejection, List<_i6.Chat>>>);
}
