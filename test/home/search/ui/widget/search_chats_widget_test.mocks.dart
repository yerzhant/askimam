// Mocks generated by Mockito 5.0.7 from annotations
// in askimam/test/home/search/ui/widget/search_chats_widget_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:askimam/home/search/bloc/search_chats_bloc.dart' as _i2;
import 'package:bloc/src/bloc.dart' as _i5;
import 'package:bloc/src/transition.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

// ignore_for_file: prefer_const_constructors

// ignore_for_file: avoid_redundant_argument_values

class _FakeSearchChatsState extends _i1.Fake implements _i2.SearchChatsState {}

class _FakeStreamSubscription<T> extends _i1.Fake
    implements _i3.StreamSubscription<T> {}

/// A class which mocks [SearchChatsBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchChatsBloc extends _i1.Mock implements _i2.SearchChatsBloc {
  MockSearchChatsBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SearchChatsState get state =>
      (super.noSuchMethod(Invocation.getter(#state),
          returnValue: _FakeSearchChatsState()) as _i2.SearchChatsState);
  @override
  _i3.Stream<_i2.SearchChatsState> get stream =>
      (super.noSuchMethod(Invocation.getter(#stream),
              returnValue: Stream<_i2.SearchChatsState>.empty())
          as _i3.Stream<_i2.SearchChatsState>);
  @override
  _i3.Stream<_i2.SearchChatsState> mapEventToState(
          _i2.SearchChatsEvent? event) =>
      (super.noSuchMethod(Invocation.method(#mapEventToState, [event]),
              returnValue: Stream<_i2.SearchChatsState>.empty())
          as _i3.Stream<_i2.SearchChatsState>);
  @override
  void add(_i2.SearchChatsEvent? event) =>
      super.noSuchMethod(Invocation.method(#add, [event]),
          returnValueForMissingStub: null);
  @override
  void onEvent(_i2.SearchChatsEvent? event) =>
      super.noSuchMethod(Invocation.method(#onEvent, [event]),
          returnValueForMissingStub: null);
  @override
  _i3.Stream<
      _i4.Transition<_i2.SearchChatsEvent, _i2.SearchChatsState>> transformEvents(
          _i3.Stream<_i2.SearchChatsEvent>? events,
          _i5.TransitionFunction<_i2.SearchChatsEvent, _i2.SearchChatsState>?
              transitionFn) =>
      (super.noSuchMethod(
              Invocation.method(#transformEvents, [events, transitionFn]),
              returnValue:
                  Stream<_i4.Transition<_i2.SearchChatsEvent, _i2.SearchChatsState>>.empty())
          as _i3.Stream<
              _i4.Transition<_i2.SearchChatsEvent, _i2.SearchChatsState>>);
  @override
  void emit(_i2.SearchChatsState? state) =>
      super.noSuchMethod(Invocation.method(#emit, [state]),
          returnValueForMissingStub: null);
  @override
  void onTransition(
          _i4.Transition<_i2.SearchChatsEvent, _i2.SearchChatsState>?
              transition) =>
      super.noSuchMethod(Invocation.method(#onTransition, [transition]),
          returnValueForMissingStub: null);
  @override
  _i3.Stream<
      _i4.Transition<_i2.SearchChatsEvent, _i2.SearchChatsState>> transformTransitions(
          _i3.Stream<_i4.Transition<_i2.SearchChatsEvent, _i2.SearchChatsState>>?
              transitions) =>
      (super.noSuchMethod(
              Invocation.method(#transformTransitions, [transitions]),
              returnValue:
                  Stream<_i4.Transition<_i2.SearchChatsEvent, _i2.SearchChatsState>>.empty())
          as _i3.Stream<
              _i4.Transition<_i2.SearchChatsEvent, _i2.SearchChatsState>>);
  @override
  _i3.Future<void> close() => (super.noSuchMethod(Invocation.method(#close, []),
      returnValue: Future<void>.value(null),
      returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.StreamSubscription<_i2.SearchChatsState> listen(
          void Function(_i2.SearchChatsState)? onData,
          {Function? onError,
          void Function()? onDone,
          bool? cancelOnError}) =>
      (super.noSuchMethod(
              Invocation.method(#listen, [
                onData
              ], {
                #onError: onError,
                #onDone: onDone,
                #cancelOnError: cancelOnError
              }),
              returnValue: _FakeStreamSubscription<_i2.SearchChatsState>())
          as _i3.StreamSubscription<_i2.SearchChatsState>);
  @override
  void onChange(_i4.Change<_i2.SearchChatsState>? change) =>
      super.noSuchMethod(Invocation.method(#onChange, [change]),
          returnValueForMissingStub: null);
  @override
  void addError(Object? error, [StackTrace? stackTrace]) =>
      super.noSuchMethod(Invocation.method(#addError, [error, stackTrace]),
          returnValueForMissingStub: null);
  @override
  void onError(Object? error, StackTrace? stackTrace) =>
      super.noSuchMethod(Invocation.method(#onError, [error, stackTrace]),
          returnValueForMissingStub: null);
}
